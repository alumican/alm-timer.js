{"version":3,"file":"index.js","sources":["../src/TimerEvent.ts","../src/Timer.ts"],"sourcesContent":["export enum TimerEventType {\n\t/**\n\t * タイマーがカウントしたときに送出されるイベントタイプです。\n\t */\n\tcount = 'count',\n\n\t/**\n\t * タイマーが設定回数までカウントしたときに送出されるイベントタイプです。\n\t */\n\tcomplete = 'complete',\n\n\t/**\n\t * タイマーを開始したときに送出されるイベントタイプです。\n\t */\n\tstart = 'start',\n\n\t/**\n\t * タイマーを停止したときに送出されるイベントタイプです。\n\t */\n\tstop = 'stop',\n\n\t/**\n\t * タイマーをリセットしたときに送出されるイベントタイプです。\n\t */\n\treset = 'reset',\n}\n\nexport interface TimerEventDetail {\n\t/**\n\t * タイマーの経過時間（ミリ秒）です。\n\t */\n\telapsedCount: number;\n\n\t/**\n\t * タイマーの設定カウント回数です。\n\t */\n\trepeatCount: number;\n\n\t/**\n\t * タイマーの残りカウント回数です。\n\t */\n\trestCount: number;\n}\n\nexport class TimerEvent extends CustomEvent<TimerEventDetail> {\n\t/**\n\t * Timerクラスから送出されるイベントオブジェクトです。\n\t * @param type - 送出されたイベントオブジェクトのイベントタイプです。\n\t * @param options - イベントオブジェクトに付随するプロパティです。\n\t */\n\tconstructor(type: TimerEventType, options: CustomEventInit<TimerEventDetail>) {\n\t\tsuper(type, options);\n\t}\n}\n","import { TimerEvent, TimerEventType } from './TimerEvent';\nimport { DateUtil } from 'alm_coreutil';\n\n/**\n * 指定した時間だけ遅延させて処理をおこなうためのクラスです。\n * 遅延時間と繰り返し回数を指定することができます。\n */\nexport class Timer extends EventTarget {\n\t// --------------------------------------------------\n\t//\n\t// CONSTRUCTOR\n\t//\n\t// --------------------------------------------------\n\n\t/**\n\t * 遅延と繰り返し回数を指定してタイマーオブジェクトを生成します。\n\t * @param delay - タイマーの遅延（ミリ秒）です。\n\t * @param repeatCount - タイマーの繰り返し回数です。0以下を指定すると無限に繰り返します。\n\t */\n\tconstructor(delay: number = 1000, repeatCount: number = 0) {\n\t\tsuper();\n\t\tthis.delay = delay;\n\t\tthis.repeatCount = repeatCount;\n\t\tthis.isRunning = false;\n\t\tthis.isComplete = false;\n\t\tthis.tId = -1;\n\t\tthis.reset();\n\t}\n\n\t// --------------------------------------------------\n\t//\n\t// METHOD\n\t//\n\t// --------------------------------------------------\n\n\t/**\n\t * タイマーを実行します。\n\t * タイマーが停止中の場合は停止時の残りの時間から再開します。\n\t */\n\tpublic start(): void {\n\t\tif (this.isComplete) return;\n\t\tif (this.isRunning) return;\n\t\tthis.isRunning = true;\n\t\tthis.tStartTime = this.tRestTime !== -1 ? DateUtil.now() - this.tElapsedTime : DateUtil.now();\n\t\tthis.startDelay(this.tRestTime !== -1 ? this.tRestTime : this.delay);\n\t\tthis.dispatch(TimerEventType.start);\n\t}\n\n\t/**\n\t * 起動中のタイマーを一時停止します。\n\t */\n\tpublic stop(): void {\n\t\tif (!this.isRunning) return;\n\t\tthis.stopInternal();\n\t\tthis.dispatch(TimerEventType.stop);\n\t}\n\n\tprivate stopInternal(): void {\n\t\tif (!this.isRunning) return;\n\t\tthis.isRunning = false;\n\t\tthis.tElapsedTime = DateUtil.now() - this.tStartTime;\n\t\tthis.tRestTime = this.delay - this.tElapsedTime;\n\t\tthis.stopDelay();\n\t}\n\n\t/**\n\t * タイマーの残り時間および既に繰り返している回数をリセットします。\n\t * 起動中のタイマーは停止されます。\n\t */\n\tpublic reset(): void {\n\t\tthis.stopInternal();\n\t\tthis.isComplete = false;\n\t\tthis.elapsedCount = 0;\n\t\tthis.tStartTime = 0;\n\t\tthis.tElapsedTime = 0;\n\t\tthis.tRestTime = -1;\n\t\tthis.dispatch(TimerEventType.reset);\n\t}\n\n\t/**\n\t * タイマーをリセットした上で開始します。\n\t */\n\tpublic restart(): void {\n\t\tthis.reset();\n\t\tthis.start();\n\t}\n\n\t/**\n\t * setInterval制御\n\t */\n\tprivate startDelay(delay: number): void {\n\t\tthis.stopDelay();\n\t\tthis.tDelay = delay;\n\t\tthis.tId = window.setInterval(this.timerHandler, this.tDelay);\n\t}\n\n\tprivate stopDelay(): void {\n\t\tif (this.tId !== -1) {\n\t\t\tclearInterval(this.tId);\n\t\t\tthis.tId = -1;\n\t\t}\n\t}\n\n\tprivate timerHandler = (): void => {\n\t\t++this.elapsedCount;\n\t\tlet isComplete: boolean = false;\n\t\tif (this.repeatCount > 0 && this.elapsedCount >= this.repeatCount) {\n\t\t\tisComplete = true;\n\t\t\tthis.isRunning = false;\n\t\t\tthis.tElapsedTime = this.tDelay;\n\t\t\tthis.stopDelay();\n\t\t} else {\n\t\t\tthis.tStartTime = DateUtil.now();\n\t\t\tif (this.tDelay !== this.delay) {\n\t\t\t\tthis.startDelay(this.delay);\n\t\t\t}\n\t\t}\n\t\tthis.dispatch(TimerEventType.count);\n\t\tif (isComplete) {\n\t\t\tthis.isComplete = true;\n\t\t\tthis.dispatch(TimerEventType.complete);\n\t\t}\n\t};\n\n\t/**\n\t * イベント管理\n\t */\n\tprivate dispatch(eventType: TimerEventType): void {\n\t\tthis.dispatchEvent(\n\t\t\tnew TimerEvent(eventType, {\n\t\t\t\tdetail: {\n\t\t\t\t\telapsedCount: this.elapsedCount,\n\t\t\t\t\trepeatCount: this.repeatCount,\n\t\t\t\t\trestCount: this.getRestCount(),\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\t}\n\n\t/**\n\t * タイマーが実行中かどうかを取得します。\n\t * @return - タイマーが実行中の場合はtrue、それ以外の場合はfalseを返します。\n\t */\n\tpublic getIsRunning(): boolean {\n\t\treturn this.isRunning;\n\t}\n\n\t/**\n\t * タイマーが完了済みかどうかを取得します。\n\t * @return - タイマーが完了済みの場合はtrue、それ以外の場合はfalseを返します。\n\t */\n\tpublic getIsComplete(): boolean {\n\t\treturn this.isComplete;\n\t}\n\n\t/**\n\t * タイマーのカウント間隔（ミリ秒）を取得します。\n\t * @return - タイマーのカウント間隔（ミリ秒）です。\n\t */\n\tpublic getDelay(): number {\n\t\treturn this.delay;\n\t}\n\n\t/**\n\t * タイマーのカウント間隔（ミリ秒）を設定します。\n\t * @param delay - タイマーのカウント間隔（ミリ秒）です。\n\t */\n\tpublic setDelay(delay: number): void {\n\t\tthis.delay = delay;\n\t}\n\n\t/**\n\t * タイマーの経過時間（ミリ秒）を取得します。\n\t * タイマーがカウントをおこなうごとに0にリセットされます。\n\t * @return - タイマーの経過時間（ミリ秒）です。\n\t */\n\tpublic getElapsedTime(): number {\n\t\treturn this.isRunning ? DateUtil.now() - this.tStartTime : this.tElapsedTime;\n\t}\n\n\t/**\n\t * タイマーが次にカウントをおこなうまでの残り時間（ミリ秒）を取得します。\n\t * @return - タイマーの残り時間（ミリ秒）です。\n\t */\n\tpublic getRestTime(): number {\n\t\treturn this.delay - this.getElapsedTime();\n\t}\n\n\t/**\n\t * タイマーの現在のカウント回数を取得します。\n\t * @return - 現在のカウント回数です。\n\t */\n\tpublic getElapsedCount(): number {\n\t\treturn this.elapsedCount;\n\t}\n\n\t/**\n\t * タイマーの設定されたカウント回数を取得します。\n\t * @return - 設定されたカウント回数です。\n\t */\n\tpublic getRepeatCount(): number {\n\t\treturn this.repeatCount;\n\t}\n\n\t/**\n\t * タイマーの設定されたカウント回数を設定します。\n\t * @param count - 設定されたカウント回数です。\n\t */\n\tpublic setRepeatCount(count: number): void {\n\t\tthis.repeatCount = count;\n\t}\n\n\t/**\n\t * タイマーの残りのカウント回数を設定します。\n\t * @return - 残りのカウント回数です。\n\t */\n\tpublic getRestCount(): number {\n\t\treturn this.repeatCount - this.elapsedCount;\n\t}\n\n\t// --------------------------------------------------\n\t//\n\t// MEMBER\n\t//\n\t// --------------------------------------------------\n\n\tprivate isRunning: boolean;\n\tprivate isComplete: boolean;\n\tprivate delay: number;\n\tprivate elapsedCount: number;\n\tprivate repeatCount: number;\n\tprivate tStartTime: number;\n\tprivate tElapsedTime: number;\n\tprivate tRestTime: number;\n\tprivate tDelay: number;\n\tprivate tId: number;\n}\n"],"names":["TimerEventType","DateUtil"],"mappings":"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"}